version: 0.2

env:
  variables:
    AWS_DEFAULT_REGION: us-east-1
    REPOSITORY_URI: 478681635279.dkr.ecr.us-east-1.amazonaws.com/python_app

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo "Instalando AWS CLI v2..."
      - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      - unzip awscliv2.zip
      - sudo ./aws/install --update
      - /usr/local/bin/aws --version
      - echo "Instalando dependencias de Python…"
      - pip install --no-cache-dir -r requirements.txt

  pre_build:
    commands:
      - |
        echo "Logging in to Amazon ECR..."
        # Llamamos directo al aws v2 que acabamos de instalar
        /usr/local/bin/aws ecr get-login-password \
          --region $AWS_DEFAULT_REGION \
        | docker login --username AWS --password-stdin $REPOSITORY_URI

  build:
    commands:
      - echo "Build started on `date`"
      - echo "Building the Docker image…"
      - docker build -t python_app:latest .
      - docker tag python_app:latest $REPOSITORY_URI:latest

  post_build:
    commands:
      - echo "Build completed on `date`"
      - echo "Pushing the Docker image…"
      - docker push $REPOSITORY_URI:latest
      - echo "Writing Image Definitions file…"
      - printf '[{"name":"Container-app-python","imageUri":"%s"}]' $REPOSITORY_URI:latest > imagedefinitions.json
      - printf '{"ImageURI":"%s"}' $REPOSITORY_URI:latest > imageDetail.json
      - cat imagedefinitions.json

artifacts:
  files:
    - '**/*'
    - imagedefinitions.json
    - imageDetail.json

  secondary-artifacts:
    DefinitionArtifact:
      files:
        - appspec.yaml
        - taskdef.json
    ImageArtifact:
      files:
        - imageDetail.json
